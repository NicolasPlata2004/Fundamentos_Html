/*# para id
"." para clases*/

#Filtro{
    /*Width para ancho y px en pixeles*/
    width: 400px;
    /*Margin para margenes y auto para que se ajuste solo*/
    margin: 0 auto;
    /*display: grid y grid-template-columns para definir el orden en columnas y filas /fr significa fila ___ /*/
    display: grid;
    grid-template-columns: repeat(3, 1fr);
}

.item{
    padding: 1rem;
    background-color: rgb(188, 188, 189);
    text-align: center;
    /*Con border radius se modifica el div para que tenga bordes redondeados*/
    border-radius: 10px;
    /*En este caso se usa margin para dejar un espacio de un pixel entre los div hijos*/
    margin-right: 1px;
    /*Con "cursor" se puede cambiar el cursor en una seccion en especifico, en este caso en los div de la clase item*/
    cursor: pointer;
}

/*Con .clase:hover se modifica el div una vez el cursor esta encima*/
.item:hover{
    color: greenyellow;
    background-color: blue;
    font-weight: bold;
}

#Cabecera{
    background-color: rgb(47, 42, 42);
    /*"vw" es ancho, con 100 todo el ancho de la panta単a*/
    /*"vh" es alto, con 100 todo el alto de la panta単a*/
    width: 100vw;
    height: 40vh;
    overflow: hidden;
}

/*Margin y padding se usan para definir las margenes, margin para la margen externa y padding para la margen interna, en este caso se 
usa 0% para no dejar ningun espacio sobrante, para no dejar margen*/
body{
    margin:0%;
}

/*****************Estilo para la cabecera*******************/
#ContTexto{
    width: 50%;
    height: 100%;
    float: left;
    text-align: center;
    color: white;
    margin-top: 70px;
}

#ContImg{
    width: 50%;
    height: 100%;
    float: right;
    margin-top: 70px;
}

#Titulo{
    font-size: 5rem;
    font-weight: bolder;
}

/*********Estilo de la cabecera***************/
/*1) llamamos la clase flotar "imagen de la nave" y le asignamos un translacion en y para generar una peque単a animacion*/
/*4) Para terminar la animacion la llamamos con la etiqueta "animation: nombre de el identificador" luego definios el tiempo y 
finalmente usamos la eetiqueta ease-in-out infinite para que la animacion se repita indefinidamente hasta que cerremos la pagina*/
.flotar{
    animation: flotarArriba 4s ease-in-out infinite;
}

/*2) Con los key frames podemos generar animacions peque単as basndonos en los frmaes y el tiempo de carga de la pagina*/
/*3) En este caso generamos una translacion en y basandonos en los pixeles y la carga desde 0% (Inicio) hasta 100% (Pagina totalmente cargada)*/

@keyframes flotarArriba {
    0%{
        transform: translateY(0px)
    }

    50%{
        transform: translateY(-20px);
    }

    100%{
        transform: translateY(0px);
    }
}